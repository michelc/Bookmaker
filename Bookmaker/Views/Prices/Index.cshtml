@model Bookmaker.Models.Travel

@functions
{
    HelperResult OK(Func<dynamic, HelperResult> nugget)
    {
        if (ViewBag.IsUpdatable)
        {
            return new HelperResult(w => nugget(null).WriteTo(w));
        }
        return new HelperResult(w => w.Write(""));
    }
}

<h2 class="crud">@Html.ActionChildcrud("Tarifs", "Prices", Model.Travel_ID)</h2>

<table>
<thead>
    <tr>
        @OK(@<th class="iconwidth"></th>)
        <th>
            Tarif
        </th>
        <th>
            30 à 34
        </th>
        <th>
            35 à 39
        </th>
        <th>
            40 à 44
        </th>
        <th>
            45 à 49
        </th>
        <th>
            50 à 55
        </th>
        <th>
            Notes
        </th>
        @OK(@<th class="iconwidth"></th>)
    </tr>
</thead>
<tbody>
@foreach (var line in Model.Prices)
{
    <tr>
        @OK(@<td>
            @Html.ActionLink("Modifier", "Edit", "Prices", new { id = line.Price_ID }, new { @class = "edit" })
        </td>)
        <td>
            @Html.ActionLink(@line.Title, "Details", "Prices", new { id = line.Price_ID }, null)
        </td>
        <td>
            @Html.DisplayFor(modelItem => line.Price1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => line.Price2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => line.Price3)
        </td>
        <td>
            @Html.DisplayFor(modelItem => line.Price4)
        </td>
        <td>
            @Html.DisplayFor(modelItem => line.Price5)
        </td>
        <td>
            @(string.IsNullOrEmpty(line.Notes) ? "" : "Oui")
        </td>
        @OK(@<td>
            @Html.ActionLink("Supprimer", "Delete", "Prices", new { id = line.Price_ID }, new { @class = "delete" })
        </td>)
    </tr>
}
</tbody>
</table>
